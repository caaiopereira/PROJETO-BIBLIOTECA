/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import modelo.Livros;
import modelo.Clientes;

/**
 *
 * @author Danilo Freitas ;)
 */
public class Emprestimo extends javax.swing.JFrame {

    /**
     * Creates new form Emprestimo
     */
    public Emprestimo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pesquisarcliente = new javax.swing.JButton();
        pesquisarlivro = new javax.swing.JButton();
        emprestar = new javax.swing.JButton();
        cadastrarcliente = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 700));
        setMinimumSize(new java.awt.Dimension(800, 700));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel1.setText("ÁREA DE EMPRÉSTIMO DE LIVROS!!!");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 80, 430, 60);

        pesquisarcliente.setBackground(new java.awt.Color(51, 102, 255));
        pesquisarcliente.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        pesquisarcliente.setText("PESQUISAR CLIENTE");
        pesquisarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarclienteActionPerformed(evt);
            }
        });
        getContentPane().add(pesquisarcliente);
        pesquisarcliente.setBounds(290, 280, 230, 60);

        pesquisarlivro.setBackground(new java.awt.Color(255, 102, 51));
        pesquisarlivro.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        pesquisarlivro.setText("PESQUISAR LIVRO");
        pesquisarlivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarlivroActionPerformed(evt);
            }
        });
        getContentPane().add(pesquisarlivro);
        pesquisarlivro.setBounds(290, 190, 230, 70);

        emprestar.setBackground(new java.awt.Color(255, 102, 51));
        emprestar.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        emprestar.setText("EMPRESTAR LIVRO");
        emprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emprestarActionPerformed(evt);
            }
        });
        getContentPane().add(emprestar);
        emprestar.setBounds(290, 360, 230, 70);

        cadastrarcliente.setBackground(new java.awt.Color(51, 102, 255));
        cadastrarcliente.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        cadastrarcliente.setText("CADASTRAR CLIENTE");
        cadastrarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarclienteActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrarcliente);
        cadastrarcliente.setBounds(290, 450, 230, 80);

        jLabel9.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel9.setText("ESCOLHA UMA DAS OPÇÕES ABAIXO:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(300, 140, 230, 40);

        voltar.setBackground(new java.awt.Color(255, 102, 51));
        voltar.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        voltar.setText("VOLTAR");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        getContentPane().add(voltar);
        voltar.setBounds(290, 550, 230, 70);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisarlivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarlivroActionPerformed
        Livros model = new Livros();
      
      String autor = null, isbn = null, titulo = null, editora = null, volume = null, quantidade = null, status = null;
           
  
            
            
            String Pesquisar = JOptionPane.showInputDialog("Digite o título do livro que deseja pesquisar"); 
            
            if (Pesquisar.equals("")){
               JOptionPane.showMessageDialog(null,"LIVRO NAO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
               dispose();
               Emprestimo EMP = new Emprestimo();
               EMP.setVisible(true);
         }
          else{  
        try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM livro WHERE titulo='"+Pesquisar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                autor  = resultado.getString("autor");
                titulo = resultado.getString("titulo");
                isbn = resultado.getString("isbn");
                editora = resultado.getString("editora");
                volume = resultado.getString("volume");
                quantidade = resultado.getString("quantidade");
                status = resultado.getString("status");
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "AUTOR  : "+autor+"\n"+
						                    "TÍTULO : "+titulo+"\n"+
                                                                    "ISBN : "+isbn+"\n"+
                                                                    "EDITORA: "+editora+"\n"+ 
                                                                    "VOLUME : R$ "+volume+"\n"+
                                                                    "QUANTIDADE : "+quantidade+"\n"+
						                    "STATUS : "+status+"\n"+
                                                                     "------------------------------"); 
                                                                    
            Emprestimo EMP = new Emprestimo();
            EMP.setVisible(true);    
	   }
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }
            
            }
    
    }//GEN-LAST:event_pesquisarlivroActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        dispose();
    MenuLivro MLI = new MenuLivro(); 
    MLI.setVisible(true);
        
    }//GEN-LAST:event_voltarActionPerformed

    private void pesquisarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarclienteActionPerformed
        String nome = null, cpf = null, endereco = null;
        Clientes model = new Clientes();
      
           
  
            
            
            String Pesquisar = JOptionPane.showInputDialog("Digite o nome do cliente que deseja pesquisar"); 
            
            if (Pesquisar.equals("")){
               JOptionPane.showMessageDialog(null,"CLIENTE NAO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
               dispose();
               Emprestimo EMP = new Emprestimo();
               EMP.setVisible(true);
         }
          else{  
        try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM clientes WHERE nome='"+Pesquisar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                nome  = resultado.getString("nome");
                cpf = resultado.getString("cpf");
                endereco = resultado.getString("endereço");
                
                
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "NOME  : "+nome+"\n"+
						                    "CPF : "+cpf+"\n"+
                                                                    "ENDEREÇO : "+endereco+"\n"+			                  
                                                                     "------------------------------"); 
                                                                    
            Emprestimo EMP = new Emprestimo();
            EMP.setVisible(true);    
	   }
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }
            
            }
    }//GEN-LAST:event_pesquisarclienteActionPerformed

    private void emprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emprestarActionPerformed
        String autor = null, isbn = null, titulo = null, editora = null, volume = null, quantidade = null, status = null;
        Livros model = new Livros();
        
            String Pesquisar = JOptionPane.showInputDialog("Digite o Título do Livro"); 
            
            
            
            if (Pesquisar.equals("")){
               JOptionPane.showMessageDialog(null,"LIVRO NAO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
               dispose();
               Emprestimo EMP = new Emprestimo();
               EMP.setVisible(true);
         }
          else{  
        try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM livro WHERE titulo='"+Pesquisar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                autor  = resultado.getString("autor");
                titulo = resultado.getString("titulo");
                isbn = resultado.getString("isbn");
                editora = resultado.getString("editora");
                volume = resultado.getString("volume");
                quantidade = resultado.getString("quantidade");
                status = resultado.getString("status");
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "AUTOR  : "+autor+"\n"+
						                    "TÍTULO : "+titulo+"\n"+
                                                                    "ISBN : "+isbn+"\n"+
                                                                    "EDITORA: "+editora+"\n"+ 
                                                                    "VOLUME : "+volume+"\n"+
                                                                    "QUANTIDADE : "+quantidade+"\n"+
						                    "STATUS : "+status+"\n"+
                                                                     "------------------------------");
             
             if(status.equals("Disponível") || (status.equals("Disponivel") || (status.equals("disponível")||(status.equals("disponivel") || (status.equals("DISPONIVEL") || (status.equals("DISPONÍVEL"))))))){
                 
                String resposta = JOptionPane.showInputDialog("O livro está Disponível, deseja pegar o livro emprestado?");
                 
                 while ((resposta.equals("sim") || (resposta.equals("Sim") || (resposta.equals("SIM"))))){
                     
                String nome = null, cpf = null, endereco = null;
                Clientes modell = new Clientes();
            
                String Pesquisar1 = JOptionPane.showInputDialog("Digite o seu nome para dar sequência ao empréstimo."); 
            
            if (Pesquisar1.equals("")){
               JOptionPane.showMessageDialog(null,"Cliente não encontrado, faça seu login para pegar esse livro emprestado!\n");
               
               dispose();
               Emprestimo EMP = new Emprestimo();
               EMP.setVisible(true);
         }
          else{  
        try 
	   {           
             String url1 = "jdbc:mysql://localhost/db_livros";
             String SQL1 = "SELECT * FROM clientes WHERE nome='"+Pesquisar1+"'";
             
	     Connection conexao1 = DriverManager.getConnection(url1,"root","");
             PreparedStatement pesquisa1 = conexao1.prepareStatement(SQL1);	     
             ResultSet resultado1 = pesquisa1.executeQuery();
             
             while (resultado1.next()) {  
                nome  = resultado1.getString("Nome");
                cpf = resultado1.getString("cpf");
                endereco = resultado1.getString("endereço");
                
                
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "NOME  : "+nome+"\n"+
						                    "CPF : "+cpf+"\n"+
                                                                    "ENDEREÇO : "+endereco+"\n"+			                  
                                                                     "------------------------------"); 
                                                                    
            Emprestimo EMP = new Emprestimo();
            EMP.setVisible(true);
            
            String DataIni = JOptionPane.showInputDialog(null,"Digite a data de retirada do livro (digite dessa maneira: dia/mês/ano");
            
            
            String SQL3 = "UPDATE clientes SET inicio='"+DataIni+"' WHERE nome='"+Pesquisar1+"'";
            
            Connection conexao3 = DriverManager.getConnection(url1,"root","");
            PreparedStatement atualizar1 = conexao3.prepareStatement(SQL3);
            atualizar1.executeUpdate();
            
            String DataEnt = JOptionPane.showInputDialog(null,"Digite a data de entrega do livro (digite dessa maneira: dia/mês/ano");
            
            
            String SQL4 = "UPDATE clientes SET fim='"+DataEnt+"' WHERE nome='"+Pesquisar1+"'";
            
            Connection conexao4 = DriverManager.getConnection(url1,"root","");
            PreparedStatement atualizar2 = conexao4.prepareStatement(SQL4);
            atualizar2.executeUpdate();
            
            JOptionPane.showMessageDialog(null,"Emprestimo de livro feito com sucesso!");
            
            JOptionPane.showMessageDialog(null,"COMPROVANTE DE EMPRÉSTIMO DE LIVRO\n"+
                                               "==================================\n"+
                                               "Titulo do livro: "+titulo+"\n"+
                                               "Autor do livro: "+autor+"\n"+
                                               "Data de empréstimo: "+DataIni+"\n"+
                                               "Data de entrega: "+DataEnt+"\n"+
                                               "Nome do cliente: "+nome+"\n"+
                                               "CPF do cliente: "+cpf+"\n"+
                                               "Endereço do cliente: "+endereco+"\n"+
                                               "==================================\n"+
                                               "OBRIGADO PELA PREFERÊNCIA, APROVEITE!");

            dispose();
            String SQL5 = "UPDATE clientes SET titulo='"+Pesquisar+"' WHERE nome='"+Pesquisar1+"'";
            Connection conexao5 = DriverManager.getConnection(url,"root","");
            PreparedStatement atualizar3 = conexao4.prepareStatement(SQL3);
            atualizar3.executeUpdate();
            
            
            String SQL6 = "UPDATE livro SET status = 'Emprestado'  WHERE titulo='"+Pesquisar+"'";
            
            Connection conexao6 = DriverManager.getConnection(url1,"root","");
            PreparedStatement atualizar4 = conexao6.prepareStatement(SQL6);
            atualizar4.executeUpdate();
            
            
            
            resposta = "nao";
            
	   }
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }
           
            }
            
                 }               
             }
             else{
                 JOptionPane.showMessageDialog(null, "Livro não disponível");
            Emprestimo EMP = new Emprestimo();
            EMP.setVisible(true);
             }}
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }
            
            
            
            }
            
    }//GEN-LAST:event_emprestarActionPerformed

    private void cadastrarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarclienteActionPerformed
        CadastroCliente CADC = new CadastroCliente();
          
          CADC.setVisible(true);
    }//GEN-LAST:event_cadastrarclienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Emprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Emprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Emprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Emprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emprestimo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarcliente;
    private javax.swing.JButton emprestar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton pesquisarcliente;
    private javax.swing.JButton pesquisarlivro;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
