/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import modelo.Livros;
import modelo.Usuario;

/**
 *
 * @author 36127512021.2
 */
public class MenuLivro extends javax.swing.JFrame {

    /**
     * Creates new form MenuEmprestar
     */
    public MenuLivro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pesquisa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pesquisar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        cadastrar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        emprestar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Página do Bibliotecária(o) ");

        pesquisa.setBackground(new java.awt.Color(153, 204, 255));
        pesquisa.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        pesquisa.setText("Pesquisar");
        pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Página do livro");

        pesquisar.setBackground(new java.awt.Color(153, 204, 255));
        pesquisar.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });

        editar.setBackground(new java.awt.Color(255, 255, 153));
        editar.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        cadastrar.setBackground(new java.awt.Color(153, 255, 153));
        cadastrar.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        cadastrar.setText("Cadastrar");
        cadastrar.setFocusable(false);
        cadastrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cadastrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        excluir.setBackground(new java.awt.Color(255, 153, 153));
        excluir.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        voltar.setBackground(new java.awt.Color(255, 153, 102));
        voltar.setFont(new java.awt.Font("Agency FB", 1, 35)); // NOI18N
        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        emprestar.setBackground(new java.awt.Color(153, 204, 255));
        emprestar.setFont(new java.awt.Font("Agency FB", 1, 25)); // NOI18N
        emprestar.setText("Emprestar");
        emprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emprestarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emprestar, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(voltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(emprestar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaActionPerformed

    }//GEN-LAST:event_pesquisaActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
       String autor = null, titulo = null, isbn = null, editora = null, volume = null, quantidade = null, status = null;
            Livros model = new Livros();
            String Consultar = JOptionPane.showInputDialog("Digite o Titulo"); 
            
            if (Consultar.equals("")){
               JOptionPane.showMessageDialog(null,"LIVRO NÃO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
         }
          else{  
        try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM livro WHERE titulo='"+Consultar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                autor  = resultado.getString("autor");
                titulo = resultado.getString("titulo");
                isbn = resultado.getString("isbn");
                editora = resultado.getString("editora");
                volume = resultado.getString("volume");
                quantidade = resultado.getString("quantidade");
                status = resultado.getString("status");
     
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "AUTOR  : "+autor+"\n"+
						                    "TITULO : "+titulo+"\n"+
                                                                    "ISBN : "+isbn+"\n"+
                                                                    "EDITORA : "+editora+"\n"+
                                                                    "VOLUME : "+volume+"\n"+
                                                                    "QUANTIDADE : "+quantidade+"\n"+
                                                                    "STATUS : "+status+"\n"+
						                    "------------------------------");   
	   }
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }
            
            }
    
    }//GEN-LAST:event_pesquisarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        String autor = null, titulo = null, isbn = null, editora = null, volume = null, quantidade = null, status = null;
            Livros model = new Livros();
            String Consultar = JOptionPane.showInputDialog("Digite o Titulo");
            
            if (Consultar.equals("")){
               JOptionPane.showMessageDialog(null,"LIVRO NÃO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
         }
          else{
            try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM livro WHERE titulo='"+Consultar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                autor  = resultado.getString("autor");
                titulo = resultado.getString("titulo");
                isbn = resultado.getString("isbn");
                editora = resultado.getString("editora");
                volume = resultado.getString("volume");
                quantidade = resultado.getString("quantidade");
                status = resultado.getString("status");
                
           } 
             
	      JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "AUTOR  : "+autor+"\n"+
						                    "TITULO : "+titulo+"\n"+
                                                                    "ISBN : "+isbn+"\n"+
                                                                    "EDITORA : "+editora+"\n"+
                                                                    "VOLUME : "+volume+"\n"+
                                                                    "QUANTIDADE : "+quantidade+"\n"+
                                                                    "STATUS : "+status+"\n"+
						                    "------------------------------");
             
            String Editar = JOptionPane.showInputDialog("Qual dado você deseja editar?");
            
            if (Editar.equals("")){
              JOptionPane.showMessageDialog(null,"DADOS NÃO ENCONTRADOS OU CAMPO EM BRANCO!\n");
 
           }
            else if (Editar.equals("autor") || (Editar.equals("Autor") || (Editar.equals("AUTOR")))){
                
                String Autor = JOptionPane.showInputDialog("Digite o novo Autor");
         
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET autor='"+Autor+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");
            }
            else if (Editar.equals("titulo") || (Editar.equals("Titulo") || (Editar.equals("TITULO")))){
             
                String Titulo = JOptionPane.showInputDialog("Digite o novo Titulo");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET titulo='"+Titulo+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");
               
            }
            else if (Editar.equals("isbn") || (Editar.equals("Isbn") || (Editar.equals("ISBN")))){
              
                String ISBN = JOptionPane.showInputDialog("Digite o novo ISBN");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET isbn='"+ISBN+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");  
            }
            else if (Editar.equals("editora") || (Editar.equals("Editora") || (Editar.equals("EDITORA")))){
              
                String Editora = JOptionPane.showInputDialog("Digite a nova Editora");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET editora='"+Editora+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");  
            }
            else if (Editar.equals("volume") || (Editar.equals("Volume") || (Editar.equals("VOLUME")))){
              
                String Volume = JOptionPane.showInputDialog("Digite o novo Volume");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET volume='"+Volume+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");  
            }
            else if (Editar.equals("quantidade") || (Editar.equals("Quantidade") || (Editar.equals("QUANTIDADE")))){
              
                String Quantidade = JOptionPane.showInputDialog("Digite a nova Quantidade");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET quantidade='"+Quantidade+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");  
            }
            else if (Editar.equals("status") || (Editar.equals("Status") || (Editar.equals("STATUS")))){
              
                String Status = JOptionPane.showInputDialog("Digite o novo Status");
                
                String URL02 = "jdbc:mysql://localhost/db_livros";
                String sql = "UPDATE livro SET status='"+Status+"' WHERE titulo='"+Consultar+"'";

                Connection conexao02 = DriverManager.getConnection(url,"root","");
                PreparedStatement atualizar1 = conexao02.prepareStatement(sql);
                atualizar1.executeUpdate();
                JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");  
            }
	   }
        catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        } 
	   } 
    }//GEN-LAST:event_editarActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        CadastroLivro CLI = new CadastroLivro();
        
        CLI.setVisible(true);
    }//GEN-LAST:event_cadastrarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
     String login = null, senha = null;
            Usuario model = new Usuario();
            String Consultar = JOptionPane.showInputDialog("Digite o Login para Excluir");
            
            if (Consultar.equals("")){
               JOptionPane.showMessageDialog(null,"USUÁRIO NÃO ENCONTRADO OU CAMPO EM BRANCO!\n");
               
               dispose();
               visao.MenuAdm MENU = new visao.MenuAdm();
               MENU.setVisible(true);
         }
          else{
            try 
	   {           
             String url = "jdbc:mysql://localhost/db_livros";
             String SQL = "SELECT * FROM usuario WHERE login='"+Consultar+"'";
             
	     Connection conexao = DriverManager.getConnection(url,"root","");
             PreparedStatement pesquisa = conexao.prepareStatement(SQL);	     
             ResultSet resultado = pesquisa.executeQuery();
             
             while (resultado.next()) {  
                login  = resultado.getString("login");
                senha = resultado.getString("senha");
     
           } 
             
	     JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
						                    "------------------------------\n"+
						                    "LOGIN  : "+login+"\n"+
						                    "SENHA : "+senha+"\n"+
						                    "------------------------------");
             
             String Excluir = JOptionPane.showInputDialog("Digite novamente o login que deseja excluir");
             
             String URL02 = "jdbc:mysql://localhost/db_livros";
             String SQL02 = "DELETE FROM usuario WHERE login='"+Excluir+"'";
             
	     Connection conexao02 = DriverManager.getConnection(URL02,"root","");
	     PreparedStatement excluir = conexao02.prepareStatement(SQL02);
             excluir.executeUpdate();
             
	     JOptionPane.showMessageDialog(null,"Excluido com sucesso!");
             
                
            }
                catch(Exception erro) {            
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);                   
        }}
    }//GEN-LAST:event_excluirActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
 dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void emprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emprestarActionPerformed
        Emprestimo EMP = new Emprestimo();
        
        EMP.setVisible(true);
    }//GEN-LAST:event_emprestarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuLivro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JButton editar;
    private javax.swing.JButton emprestar;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton pesquisa;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
